#include<iostream>
#include<string>
using namespace std;
struct point
{
	int num;
	char symbole;
}arr[3][3];

void print();
void playerX(int&x);
void playerY(int&x);
int checkX();
int checkY();
int main()
{

	string g;
	int count = 1;
	int x;
	char count2 = '1';
	for (size_t i = 0; i < 3; i++)
	{
		for (size_t j = 0; j < 3; j++)
		{
			arr[i][j].num = count;
			arr[i][j].symbole = count2;
			count++;
			count2++;
		}
	}
	print();
	for (size_t i = 1; i <= 9; i++)
	{
		switch (i)
		{
		case 1:
		case 3:
		case 5:
		case 7:
		case 9:
			cout << "Player 1, enter a number:" << endl;
			cin >> x;
			if (x >= 1 && x <= 9)
			{

				playerX(x);
				if (checkX())
				{
					system("cls");
					print();
					cout << "Player 1 is the winner !!" << endl;
					return 0;
				}
			}
			else
			{
				system("cls");
				print();
				cout << "Invalid Move" << endl;
				getline(cin, g);
				getline(cin, g);
				system("cls");
				print();
				while (true)
				{
					cout << "Player 1, enter a number:" << endl;
					cin >> x;
					if (x >= 1 && x <= 9)
					{
						playerX(x);
						if (checkX())
						{
							system("cls");
							print();
							cout << "Player 1 is the winner !!" << endl;
							return 0;
						}
						break;
					}
					system("cls");
					print();
				}
			}
			break;
		case 2:
		case 4:
		case 6:
		case 8:
			cout << "Player 2, enter a number:" << endl;
			cin >> x;
			if (x >= 1 && x <= 9)
			{
				playerY(x);
				if (checkY())
				{
					system("cls");
					print();
					cout << "Player 2 is the winner !!" << endl;
					return 0;
				}
			}
			else
			{
				system("cls");
				print();
				cout << "Invalid Move" << endl;
				getline(cin, g);
				getline(cin, g);
				system("cls");
				print();
				while (true)
				{
					cout << "Player 2, enter a number:" << endl;
					cin >> x;
					if (x >= 1 && x <= 9)
					{
						playerY(x);
						if (checkY())
						{
							system("cls");
							print();
							cout << "Player 2 is the winner !!" << endl;
							return 0;
						}
						break;
					}
					system("cls");
					print();
				}
			}
			break;

		}
	}
	cout << "Game Over !" << endl;
	return 0;
}

void print()
{
	cout << "\t Tic Tac Toe " << endl;
	cout << "Player 1 (X)  -  Player 2 (O)" << endl << endl;
	for (size_t i = 0; i < 3; i++)
	{
		cout << endl;
		for (size_t j = 0; j < 3; j++)
		{
			cout << "  " << arr[i][j].symbole << "  ";
			if (j == 1 || j == 0)
				cout << "|";
		}
		cout << endl;
		if (i != 2)
			cout << "________________";
		cout << endl;
	}
}
void playerX(int &x)
{
	string g;
	int l1, l2;
	for (size_t i = 0; i < 3; i++)
	{
		for (size_t j = 0; j < 3; j++)
		{
			if (arr[i][j].symbole != 'X'&&arr[i][j].symbole != 'O')
			{
				if (arr[i][j].num == x)
				{
					arr[i][j].symbole = 'X';

					system("cls");
					print();
					return;
				}
			}
			else
			{
				l1 = i;
				l2 = j;
			
			}
		}
	}
	if (arr[l1][l2].symbole == 'X' || arr[l1][l2].symbole == 'O')
	{
		system("cls");
		print();
		cout << "Invalid Move" << endl;
		getline(cin, g);
		getline(cin, g);
		system("cls");
		print();
		while (true)
		{
			cout << "Player 1, enter a number:" << endl;
			cin >> x;
			for (size_t i = 0; i < 3; i++)
			{
				for (size_t j = 0; j < 3; j++)
				{
					if (arr[i][j].symbole != 'X'&&arr[i][j].symbole != 'O')
					{
						if (arr[i][j].num == x)
						{
							arr[i][j].symbole = 'X';

							system("cls");
							print();
						}
					}
				}
			}
			system("cls");
		print();
			break;
		}
	}
}
void playerY(int &x)
{
	string g;
	int l1, l2;
	for (size_t i = 0; i < 3; i++)
	{
		for (size_t j = 0; j < 3; j++)
		{
			if (arr[i][j].symbole != 'X'&&arr[i][j].symbole != 'O')
			{
				if (arr[i][j].num == x)
				{
					arr[i][j].symbole = 'O';

					system("cls");
					print();
					return;
				}
			}
			else
			{
				l1 = i; l2 = j;
			}
		}
	}
	if (arr[l1][l2].symbole == 'X' || arr[l1][l2].symbole == 'O')
	{
		system("cls");
		print();
		cout << "Invalid Move" << endl;
		getline(cin, g);
		getline(cin, g);
		system("cls");
		print();
		while (true)
		{
			cout << "Player 2, enter a number:" << endl;
			cin >> x;
			for (size_t i = 0; i < 3; i++)
			{
				for (size_t j = 0; j < 3; j++)
				{
					if (arr[i][j].symbole != 'X'&&arr[i][j].symbole != 'O')
					{
						if (arr[i][j].num == x)
						{
							arr[i][j].symbole = 'O';

							system("cls");
							print();
						}
					}
				}
			}
			system("cls");
			print();
			break;
		}
	}
}
int checkX()
{
	for (size_t i = 0; i < 3; i++)
	{
		for (size_t j = 0; j < 3; j++)
		{
			if (arr[0][0].symbole == 'X'&&arr[1][1].symbole == 'X'&&arr[2][2].symbole == 'X')
			{

				return 1;
			}
			else if (arr[0][2].symbole == 'X'&&arr[1][1].symbole == 'X'&&arr[2][0].symbole == 'X')
			{

				return 2;
			}
			else if (arr[0][0].symbole == 'X'&&arr[1][0].symbole == 'X'&&arr[2][0].symbole == 'X')
			{

				return 3;
			}
			else if (arr[0][1].symbole == 'X'&&arr[1][1].symbole == 'X'&&arr[2][1].symbole == 'X')
			{
				return 4;
			}
			else if (arr[0][2].symbole == 'X'&&arr[1][2].symbole == 'X'&&arr[2][2].symbole == 'X')
			{

				return 5;
			}
			else if (arr[0][0].symbole == 'X'&&arr[0][1].symbole == 'X'&&arr[0][2].symbole == 'X')
			{

				return 6;
			}
			else if (arr[1][0].symbole == 'X'&&arr[1][1].symbole == 'X'&&arr[1][2].symbole == 'X')
			{

				return 7;
			}
			else if (arr[2][0].symbole == 'X'&&arr[2][1].symbole == 'X'&&arr[2][2].symbole == 'X')
			{
				return 8;
			}
		}

	}
	return 0;
}
int checkY()
{
	for (size_t i = 0; i < 3; i++)
	{
		for (size_t j = 0; j < 3; j++)
		{
			if (arr[0][0].symbole == 'O'&&arr[1][1].symbole == 'O'&&arr[2][2].symbole == 'O')
			{

				return 1;
			}
			else if (arr[0][2].symbole == 'O'&&arr[1][1].symbole == 'O'&&arr[2][0].symbole == 'O')
			{

				return 2;
			}
			else if (arr[0][0].symbole == 'O'&&arr[1][0].symbole == 'O'&&arr[2][0].symbole == 'O')
			{

				return 3;
			}
			else if (arr[0][1].symbole == 'O'&&arr[1][1].symbole == 'O'&&arr[2][1].symbole == 'O')
			{

				return 4;
			}
			else if (arr[0][2].symbole == 'O'&&arr[1][2].symbole == 'O'&&arr[2][2].symbole == 'O')
			{

				return 5;
			}
			else if (arr[0][0].symbole == 'O'&&arr[0][1].symbole == 'O'&&arr[0][2].symbole == 'O')
			{

				return 6;
			}
			else if (arr[1][0].symbole == 'O'&&arr[1][1].symbole == 'O'&&arr[1][2].symbole == 'O')
			{

				return 7;
			}
			else if (arr[2][0].symbole == 'O'&&arr[2][1].symbole == 'O'&&arr[2][2].symbole == 'O')
			{

				return 8;
			}

		}
	}
	return 0;
}









